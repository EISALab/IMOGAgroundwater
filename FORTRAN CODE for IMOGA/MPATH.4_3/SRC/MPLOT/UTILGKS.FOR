C MODPATH-PLOT Version 3.00 (V3, Release 2, 5-99)
C Changes:
C   No change since previous release: (V3, Release 1, 9-94)
C***** SUBROUTINES *****
C     OPGKS
C     CLGKS
C     SETTXT
C     SETGKS
C     GKSCFG
C     GSTRN
C     GSELTR
C     PKCLR
C     CYCLE
C     PKPAT
C     DEFCOL
C     GETDC
C***********************
 
C***** SUBROUTINE *****
      SUBROUTINE OPGKS(MODEL,KND,ICNECT,IULOG,ICOLA,IDCUN,RXM,
     1                 RYM,NPIXX,NPIXY,IMDEV,ISEG,IBELL,IFONT,CHSPAC,
     2                 IUERR,VER,NPCI,IOUT,CFGPTH)
      DIMENSION IWSTP(50),ICONID(50),IUFIL(50),NDVCOL(50)
      CHARACTER*(*) VER,CFGPTH
      CHARACTER*132  FILNAM(50)
      CHARACTER*75   MESAGE(50)
C
C--- SET ARBITRARY DEVICE COORDINATES. IF THESE VALUES ARE RESET TO
C    OTHER THAN 0 IN SUBROUTINE "PREPWK", THEN THESE VALUES WILL BE USED
C    FOR THE THE DEVICE RATHER THAN THE VALUES RETURNED BY THE GKS
C    FUNCTION "GQDSP".
      RXMDEV=0.0
      RYMDEV=0.0
      NPXDEV=0
      NPYDEV=0
C
C--- NDVMAX = MAXIMUM NUMBER OF WORKSTATIONS
      NDVMAX=50
C
C***********************************************************************
C     SET DEFAULT PARAMETERS AND SET WORKSTATION PARAMETERS
C***********************************************************************
C
      CALL SETGKS(NDVMAX,IWSTP,ICONID,IUFIL,NDVCOL,FILNAM,MESAGE,
     1   ISEG,IBELL,IWISS,IWISSC,IBUFA,IFONT,CHSPAC,IUERR,
     2   ICNECT,IOUT,CFGPTH,ICLIP)
C
C***********************************************************************
C     FIND OUT WHAT WORKSTATION WAS SELECTED
C***********************************************************************
C
 
      DO 2 N=1,NDVMAX
        IF(MODEL.EQ.IWSTP(N)) THEN
        KGRP=N
        NPCI=NDVCOL(N)
        GO TO 3
        END IF
2     CONTINUE
 
 
C--- NO MATCH WAS FOUND
      WRITE(*,*)
     1'GRAPHIC DEVICE IS NOT SUPPORTED. STOP.'
      STOP
 
3     CONTINUE
C***********************************************************************
 
C--- OPEN A GRAPHICS OUTPUT FILE IF NECESSARY
      IF(IUFIL(KGRP).GE.0) THEN
      OPEN(UNIT=IUFIL(KGRP),FILE=FILNAM(KGRP),STATUS='UNKNOWN',ERR=500)
      END IF
 
C--- IF THERE IS A MESSAGE, WRITE IT TO THE SCREEN
      IF(MESAGE(KGRP).NE.' ') THEN
      WRITE(*,'(1X,A)') MESAGE(KGRP)
      END IF
 
C--- TURN SEGMENTS OFF IF KND >= 0
      IF(KND.GE.0) ISEG=0
 
C--- OPEN GKS SYSTEM
      CALL GOPKS(IUERR,IBUFA)
 
C--- CALL SUBROUTINE "BEFORE", WHICH TAKES CARE OR ANY SPECIAL SETUP
C    WORK THAT NEEDS TO BE DONE FOR A PARTICULAR DEVICE BEFORE IT IS OPENED.
C    SUBROUTINE "BEFORE" MUST BE PROVIDED FOR EACH GKS INSTALLATION.
      CALL BEFORE(MODEL,VER,RXMDEV,RYMDEV,NPXDEV,NPYDEV)
 
C--- OPEN PRIMARY OUTPUT DEVICE WORKSTATION
      CALL GOPWK(1,ICONID(KGRP),MODEL)
 
C--- ACTIVATE PRIMARY OUTPUT DEVICE WORKSTATION
      CALL GACWK(1)
 
C--- CALL SUBROUTINE "AFTER", WHICH TAKES CARE OR ANY SPECIAL SETUP
C    WORK THAT NEEDS TO BE DONE FOR A PARTICULAR DEVICE AFTER IT IS OPENED.
C    SUBROUTINE "AFTER" MUST BE PROVIDED FOR EACH GKS INSTALLATION.
      CALL AFTER(MODEL,VER,RXMDEV,RYMDEV,NPXDEV,NPYDEV)
 
C--- IF SEGMENTS ARE USED, OPEN AND ACTIVATE WISS DEVICE,
      IF(ISEG.EQ.1) THEN
      CALL GOPWK(2,IWISSC,IWISS)
      CALL GACWK(2)
      END IF
 
C
C--- IF DEVICE IS NOT META FILE, GET COLOR AND DEVICE DIMENSIONS
      IF(KND.NE.2) THEN
      IMDEV=0
      CALL GQCF(MODEL,IERR,NCOLI,ICOLA,NPC)
      CALL GQDSP(MODEL,IERDSP,IDCUN,RXM,RYM,NPIXX,NPIXY)
      IF(KND.LE.0) CALL QWSIZE(1,IERR,IDCUN,RXM,RYM,NPIXX,NPIXY)
 
C--- ELSE IF DEVICE IS META FILE, SET FLAG = COLOR DEVICE (ICOLA=1) AND
C    SET UP DUMMY DEVICE SIZE PARAMETER TO BE A SQUARE
      ELSE IF(KND.EQ.2 .OR. RXM.LE.0. .OR. RYM.LE.0.) THEN
      IMDEV=1
      IDCUN=1
      RXM=1.0
      RYM=1.0
      NPIXX=1
      NPIXY=1
      ICOLA=1
      END IF
 
      IF(RXMDEV.GT.0.0 .AND. RYMDEV.GT.0.0
     1   .AND. NPXDEV.GT.0 .AND. NPYDEV.GT.0) THEN
        RXM=RXMDEV
        RYM=RYMDEV
        NPIXX=NPXDEV
        NPIXY=NPYDEV
      END IF
 
C--- SET GKS CLIPPING INDICATOR
      CALL GSCLIP(ICLIP)
 
      RETURN
C
500   WRITE(*,*)
     1'MODPATH-PLOT: ERROR OPENING GRAPHICS OUTPUT FILE. STOP.'
      WRITE(IULOG,*)
     1'MODPATH-PLOT: ERROR OPENING GRAPHICS OUTPUT FILE. STOP.'
      STOP
      END
 
C***** SUBROUTINE *****
      SUBROUTINE CLGKS(KND,IWAIT,ISEG,IBELL,RXM,RYM,IU,NCOL,NROW,
     1 IMIN,IMAX,JMIN,JMAX,XMN,XMX,YMN,YMX,IVIEW,iredraw)
      COMMON /LOCATR/ MAXLC,NLCDEV,LOCNUM(2),MAXDR,LDRECL,LIAL(2),
     1        IAL(20),LRAL(2),RAL(20),LLSTRL(2),LSTRL(20),IPDREC(2)
C
      iredraw=0
      IF(IWAIT.EQ.1) THEN
        IF(IBELL.NE.0) CALL BEEP
601     CALL WAIT(KND,ISEG,RXM,RYM,IU,NCOL,NROW,IMIN,IMAX,JMIN,
     1                  JMAX,XMN,XMX,YMN,YMX,IVIEW)
        call igrhardcopy('S')
        if(infoinput(67).ge.251 .and. infoinput(67).le.256) GO TO 601
        if(infoinput(67).eq.259) then
             iredraw=1
             return
        end if
      END IF
 
      CALL GDAWK(1)
      CALL GCLWK(1)
      IF(ISEG.EQ.1) THEN
      CALL GDAWK(2)
      CALL GCLWK(2)
      END IF
      CALL GCLKS
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE SETTXT(IFONT,IPREC,HGHT,CHSPAC)
C
      CALL GSTXFP(IFONT,IPREC)
      CALL GSCHH(HGHT)
      CALL GSCHSP(CHSPAC)
C
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE SETGKS(NDVMAX,IWSTP,ICONID,IUFIL,NDVCOL,FILNAM,
     1           MESAGE,ISEG,IBELL,IWISS,IWISSC,IBUFA,IFONT,CHSPAC,
     2           IUERR,IUCFG,IOUT,CFGPTH,ICLIP)
      CHARACTER*(*) FILNAM(NDVMAX),MESAGE(NDVMAX),CFGPTH
      CHARACTER*80 DRECL,STRL
      DIMENSION IWSTP(NDVMAX),ICONID(NDVMAX),IUFIL(NDVMAX),
     1          NDVCOL(NDVMAX)
      COMMON /LOCATR/ MAXLC,NLCDEV,LOCNUM(2),MAXDR,LDRECL,LIAL(2),
     1        IAL(20),LRAL(2),RAL(20),LLSTRL(2),LSTRL(20),IPDREC(2)
      COMMON /DRECL/ DRECL(10),STRL(20)
      COMMON /MARKER/ IAMKCI,IAMKTP,SCIAMK
 
C
C======================= SET DEFAULT VALUES ==========================
C--- SET FONT
      IFONT=1
C--- SET CHARACTER SPACING FACTOR
C    (EXPRESSED AS A FRACTION OF THE CHARACTER HEIGHT)
      CHSPAC=0.0
C--- SET BELL [ 0=OFF  1=ON ]
      IBELL=0
C--- SET SEGMENT OPTION [ 0=OFF  1=ON(WISS)  2=ON(NO WISS) ]
      ISEG=0
C--- SET SEGMENT BUFFER SIZE
      IBUFA=0
C--- SET PARAMETERS FOR LOCATOR DATA RECORD
      IPDREC(1)=0
      IPDREC(2)=0
      NLCDEV=0
C--- SET INTERACTIVE MARKER PARAMETERS
      IAMKCI=1
      IAMKTP=1
      SCIAMK=1.0
C--- SET GKS CLIPPING TO "ON"
      ICLIP=1
C--- OPEN GKS ERROR FILE
      CALL OPNFIL (IUERR,'errors.gks',4,IOUT,IBATCH,3)
 
C=======================================================================
C
C--- RESET INSTALLATION-DEPENDENT PARAMETERS
C
      CALL GKSCFG(IUCFG,IOUT,CFGPTH,IFONT,CHSPAC,IBELL,ISEG,IBUFA,
     2 NDVCOL,IWSTP,ICONID,IUFIL,FILNAM,MESAGE,NDVMAX,
     3 IWISS,IWISSC,ICLIP)
C=======================================================================
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE GKSCFG(IU,IOUT,CFGPTH,IFONT,CHSPAC,IBELL,ISEG,IBUFA,
     1 NDVCOL,IWSTP,ICONID,IUFIL,FILNAM,MESAGE,NDVMAX,
     2 IWISS,IWISSC,ICLIP)
      CHARACTER*(*) FILNAM(NDVMAX),MESAGE(NDVMAX),CFGPTH
      CHARACTER*1 DELIM,INLINE
      CHARACTER*81 LINE,PARAMS,CMD
      CHARACTER*80 DRECL,STRL
      DIMENSION IWSTP(NDVMAX),ICONID(NDVMAX),IUFIL(NDVMAX),
     1          NDVCOL(NDVMAX)
      COMMON /LOCATR/ MAXLC,NLCDEV,LOCNUM(2),MAXDR,LDRECL,LIAL(2),
     1        IAL(20),LRAL(2),RAL(20),LLSTRL(2),LSTRL(20),IPDREC(2)
      COMMON /DRECL/ DRECL(10),STRL(20)
      COMMON /MARKER/ IAMKCI,IAMKTP,SCIAMK
 
      DELIM=  ':'
      INLINE= '@'
C
      DO 1 N=1,NDVMAX
      IWSTP(N)= -1
      FILNAM(N)= ' '
      MESAGE(N)= ' '
      IUFIL(N)= -1
1     CONTINUE
C
      OPEN(IU,FILE=CFGPTH,ERR=500)
 
C--- READ BELL FLAG
10    READ(IU,'(A)',END=11) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 10
      CALL GETCMD(LINE,DELIM,CMD,PARAMS,LCMD)
      IF(CMD(1:LCMD).NE.'BELL') GO TO 10
      ICOL=1
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,1,IDUMMY,RDUMMY,IOUT,IU)
      IF(PARAMS(IWSTRT:IWLAST).EQ.'ON') THEN
      IBELL=1
      ELSE IF(PARAMS(IWSTRT:IWLAST).EQ.'OFF') THEN
      IBELL=0
      END IF
      GO TO 10
11    REWIND(IU)
 
C--- READ SEGMENTATION FLAG
20    READ(IU,'(A)',END=21) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 20
      CALL GETCMD(LINE,DELIM,CMD,PARAMS,LCMD)
      IF(CMD(1:LCMD).NE.'SEGMENTS') GO TO 20
      ICOL=1
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,1,IDUMMY,RDUMMY,IOUT,IU)
      IF(PARAMS(IWSTRT:IWLAST).EQ.'ON') THEN
      ISEG=1
      ELSE IF(PARAMS(IWSTRT:IWLAST).EQ.'OFF') THEN
      ISEG=0
      END IF
      GO TO 20
21    REWIND(IU)
 
C--- READ SIZE OF BUFFER ARRAY REQUIRED FOR GKS OPEN KERNEL SYSTEM ROUTINE
30    READ(IU,'(A)',END=31) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 30
      CALL GETCMD(LINE,DELIM,CMD,PARAMS,LCMD)
      IF(CMD(1:LCMD).NE.'BUFFER') GO TO 30
      ICOL=1
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,3,IBUFA,RDUMMY,IOUT,IU)
      GO TO 30
31    REWIND(IU)
 
C--- READ INTERACTIVE MARKER DATA.
40    READ(IU,'(A)',END=41) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 40
      CALL GETCMD(LINE,DELIM,CMD,PARAMS,LCMD)
      IF(CMD(1:LCMD).NE.'INTERACTIVEMARKER') GO TO 40
      ICOL=1
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,2,IAMKCI,RDUMMY,IOUT,IU)
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,2,IAMKTP,RDUMMY,IOUT,IU)
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,3,IDUMMY,SCIAMK,IOUT,IU)
      GO TO 40
41    REWIND(IU)
 
C--- READ FONT NUMBER
50    READ(IU,'(A)',END=51) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 50
      CALL GETCMD(LINE,DELIM,CMD,PARAMS,LCMD)
      IF(CMD(1:LCMD).NE.'FONT') GO TO 50
      ICOL=1
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,3,IFONT,RDUMMY,IOUT,IU)
      GO TO 50
51    REWIND(IU)
 
c--- read character spacing
60    READ(IU,'(A)',END=61) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 60
      CALL GETCMD(LINE,DELIM,CMD,PARAMS,LCMD)
      IF(CMD(1:LCMD).NE.'CHARACTERSPACING') GO TO 60
      ICOL=1
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,3,IDUMMY,CHSPAC,IOUT,IU)
      GO TO 60
61    REWIND(IU)
 
C--- READ WORKSTATION-INDEPENDENT SEGMENT STORAGE (WISS) PARAMETERS
C         WORKSTATION TYPE, CONNECTION ID
80    READ(IU,'(A)',END=81) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 80
      CALL GETCMD(LINE,DELIM,CMD,PARAMS,LCMD)
      IF(CMD(1:LCMD).NE.'WISS') GO TO 80
      ICOL=1
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,2,IWISS,RDUMMY,IOUT,IU)
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,3,IWISSC,RDUMMY,IOUT,IU)
      GO TO 80
81    REWIND(IU)
 
C--- READ NUMBER OF LOCATOR DEVICES AND GKS DEVICE ID NUMBERS
90    READ(IU,'(A)',END=91) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 90
      CALL GETCMD(LINE,DELIM,CMD,PARAMS,LCMD)
      IF(CMD(1:LCMD).NE.'LOCATORDEVICES') GO TO 90
      ICOL=1
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,2,NLCDEV,RDUMMY,IOUT,IU)
      IF(NLCDEV.LE.0 .OR. NLCDEV.GT.MAXLC) GO TO 90
      DO 92 N=1,NLCDEV
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,2,LOCNUM(N),RDUMMY,IOUT,IU)
92    CONTINUE
 
      DO 93 N=1,NLCDEV
94    READ(IU,'(A)',END=91) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 94
      ICOL=1
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,1,IDUMMY,RDUMMY,IOUT,IU)
      IF(LINE(IWSTRT:IWLAST).EQ.'YES') THEN
      IPDREC(N)=1
      ELSE IF(LINE(IWSTRT:IWLAST).EQ.'NO') THEN
      IPDREC(N)=0
      GO TO 93
      END IF
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,2,LIAL(N),RDUMMY,IOUT,IU)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,3,LRAL(N),RDUMMY,IOUT,IU)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,2,LLSTRL(N),RDUMMY,IOUT,IU)
      IF(LIAL(N).GT.0) THEN
99    READ(IU,'(A)',END=91) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 99
      ICOL=1
      DO 95 I=1,LIAL(N)
      II= I + 10*(N-1)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,2,IAL(II),RDUMMY,IOUT,IU)
95    CONTINUE
      END IF
      IF(LRAL(N).GT.0) THEN
100   READ(IU,'(A)',END=91) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 100
      ICOL=1
      DO 96 I=I,LRAL(N)
      II= I + 10*(N-1)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,2,IDUMMY,RAL(II),IOUT,IU)
96    CONTINUE
      END IF
      IF(LLSTRL(N).GT.0) THEN
101   READ(IU,'(A)',END=91) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 101
      ICOL=1
      DO 97 I=1,LLSTRL(N)
      II= I + 10*(N-1)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,2,LSTRL(II),RDUMMY,IOUT,IU)
97    CONTINUE
      DO 98 I=1,LLSTRL(N)
      II= I + 10*(N-1)
      IF(LSTRL(II).GT.0) then
102   READ(IU,'(A)',END=91) STRL(II)
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 102
      END IF
98    CONTINUE
      END IF
 
93    CONTINUE
      GO TO 90
91    REWIND(IU)
 
C--- GET GRAPHIC DEVICE DATA
      K=0
110   READ(IU,'(A)',END=111) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 110
      CALL GETCMD(LINE,DELIM,CMD,PARAMS,LCMD)
      IF(CMD(1:LCMD).NE.'DEVICE') GO TO 110
      K=K+1
      IF(K.GT.NDVMAX) GO TO 111
      ICOL=1
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,2,IWSTP(K),RDUMMY,IOUT,IU)
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,2,NDVCOL(K),RDUMMY,IOUT,IU)
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,2,ICONID(K),RDUMMY,IOUT,IU)
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,0,IDUMMY,RDUMMY,IOUT,IU)
      IF(LINE(IWSTRT:IWLAST).NE.' ') THEN
      FILNAM(K)=PARAMS(IWSTRT:IWLAST)
      CALL CHOP(FILNAM(K),L)
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,2,IDUMMY,RDUMMY,IOUT,IU)
      IF(LINE(IWSTRT:IWLAST).EQ.' ' .OR. IDUMMY.LE.0) THEN
      IUFIL(K)=IU
      ELSE
      IUFIL(K)=IDUMMY
      END IF
      MESAGE(K)= 'SENDING GRAPHIC OUTPUT TO FILE <'//FILNAM(K)(1:L)//'>'
      END IF
      GO TO 110
111   REWIND(IU)
 
120   READ(IU,'(A)',END=121) LINE
      CALL COMENT(LINE,INLINE,ISTAT)
      IF(ISTAT.NE.0) GO TO 120
      CALL GETCMD(LINE,DELIM,CMD,PARAMS,LCMD)
      IF(CMD(1:LCMD).NE.'CLIPPING') GO TO 120
      ICOL=1
      CALL URWORD(PARAMS,ICOL,IWSTRT,IWLAST,1,IDUMMY,RDUMMY,IOUT,IU)
      IF(PARAMS(IWSTRT:IWLAST).EQ.'ON') THEN
      ICLIP=1
      ELSE IF(PARAMS(IWSTRT:IWLAST).EQ.'OFF') THEN
      ICLIP=0
      END IF
      GO TO 120
121   CONTINUE
 
C
      CLOSE(IU)
      RETURN
500   WRITE(*,*) 'ERROR OPENING GKS CONFIGURATION FILE. STOP.'
      WRITE(IOUT,*) 'ERROR OPENING GKS CONFIGURATION FILE. STOP.'
      STOP
      END
 
C***** SUBROUTINE *****
      SUBROUTINE GSTRN(NT,XL,XR,YB,YT,XNL,XNR,YNB,YNT)
      COMMON /WTRAN/ TRNCRD(16)
C
      N=8*(NT-1)
      TRNCRD(N+1)=XL
      TRNCRD(N+2)=XR
      TRNCRD(N+3)=YB
      TRNCRD(N+4)=YT
      TRNCRD(N+5)=XNL
      TRNCRD(N+6)=XNR
      TRNCRD(N+7)=YNB
      TRNCRD(N+8)=YNT
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE GSELTR(NT)
      COMMON /WTRAN/ TRNCRD(16)
C
      N=8*(NT-1)
      CALL GSWN(1,TRNCRD(N+1),TRNCRD(N+2),TRNCRD(N+3),TRNCRD(N+4))
      CALL GSVP(1,TRNCRD(N+5),TRNCRD(N+6),TRNCRD(N+7),TRNCRD(N+8))
      CALL GSELNT(1)
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE PKCLR (KCLR)
      CALL GSTXCI(KCLR)
      CALL GSPLCI(KCLR)
      CALL GSPMCI(KCLR)
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE CYCLE (KCLR)
      COMMON /COLORS/
     1 ICO(20),ICYCL(20),CTR(0:255),CTG(0:255),CTB(0:255),NCYCL,NCTDEF,
     2 MCI
      K= MOD(KCLR,NCYCL)
      IF(K.EQ.0) K=NCYCL
      KK= ICYCL(K)
      CALL GQTXCI(IERR,ICITX)
      CALL GQPLCI(IERR,ICIPL)
      CALL GQPMCI(IERR,ICIPM)
      IF(ICITX.NE.KK.OR.ICIPL.NE.KK.OR.ICIPM.NE.KK) THEN
      CALL GSTXCI(KK)
      CALL GSPLCI(KK)
      CALL GSPMCI(KK)
      END IF
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE PKPAT (IPAT)
      IF(IPAT.LE.3) GO TO 20
10    IPAT=IPAT-3
      IF(IPAT.LE.3) GO TO 20
      GO TO 10
20    CONTINUE
      IF (IPAT.EQ.1) THEN
      CALL GSLN(1)
      ELSE IF (IPAT.EQ.2) THEN
      CALL GSLN(2)
      ELSE IF (IPAT.EQ.3) THEN
      CALL GSLN(3)
      END IF
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE DEFCOL(IWKID,N1,N2)
      COMMON /COLORS/
     1 ICO(20),ICYCL(20),CTR(0:255),CTG(0:255),CTB(0:255),NCYCL,NCTDEF,
     2 MCI
C
      DO 1 N=N1,N2
      CALL GSCR(IWKID,N,CTR(N),CTG(N),CTB(N))
1     CONTINUE
C
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE GETDC(MODEL,RXM,RYM)
      CALL GQDSP(MODEL,IERDSP,IDCUN,RXM,RYM,NPIXX,NPIXY)
      IF(RXM.LE.0. .OR. RYM.LE.0.) THEN
        RXM= 1.0
        RYM= 1.0
      END IF
      RETURN
      END
