C MODPATH-PLOT Version 4.00 (V4, Release 3, 1-2002)
C  Changes to work with MODFLOW-2000
C
C MODPATH-PLOT Version 3.00 (V3, Release 2, 5-99)
C Changes:
C   No change since previous release: (V3, Release 1, 9-94)
C***** SUBROUTINES *****
C     SPACE
C     FILES
C     DEVICE
C     SFILE
C     LOFILE
C     SETNGS
C***********************
 
C***** SUBROUTINE *****
      SUBROUTINE SPACE(LENA,NCOL,NROW,NLAY,NCBL,IGRID,NZDIM,
     1LCIBOU,LCXMX,LCXMN,LCDX,LCYMX,LCYMN,LCDY,LCZBOT,LCZTOP,
     2LCDZ,LCZMX,LCZMN,LCHEAD,LCLAYC,LCNCON,LCDZCB,LCIBUF,
     3LCIBX,LCIGZ,LCXLOC,LCYLOC,LCCLEV,LCBUFF,LCICB,LCHPRV,
     4LCPAR,LCZXB,LCZXT,LCPERL,LCTIMX,LCNTS,LCIGZB,LCIBPZ,LCCDAT,LCIBRM,
     5NLVMAX,IU,IUSUM,NXDIM,NIGZ,NPARY,MAXPTS,NPER,HNOFLO,HDRY,
     6ISUM,INDIS,LAYCBD,LCISSFLG)
C
      CHARACTER*133 LINE
      DIMENSION LAYCBD(200)
      INTEGER*4 LENA,ISUM,ISM1
      INTEGER*4 LCIBOU,LCXMX,LCXMN,LCDX,LCYMX,LCYMN,LCDY,LCZBOT,LCZTOP,
     2LCDZ,LCZMX,LCZMN,LCHEAD,LCLAYC,LCNCON,LCDZCB,LCIBUF,LCCLEV,
     3LCXLOC,LCYLOC,LCBUFF,LCICB,LCPAR,LCIGZ,LCIBX,LCZXB,LCZXT,LCPERL,
     4LCTIMX,LCNTS,LCIGZB,LCCDAT,LCIBRM,LCHPRV
C     ------------------------------------------------------------------
C
C  MF-2000 DIS data
      ISUM=1
      CALL DIS2AL(INDIS,IUSUM,LAYCBD,NCBL,IGRID,NCOL,NROW,NLAY,NPER)
C
C  ENTER DIMENSION DATA
      READ(IU,'(A)') LINE
      ICOL=1
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,1,IDUMMY,RDUMMY,IUSUM,IU)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,3,IDUMMY,HNOFLO,IUSUM,IU)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,3,IDUMMY,HDRY,IUSUM,IU)
      IF(LINE(IWSTRT:IWLAST).EQ.' ') THEN
        WRITE(*,*)
     1'You must enter a value for HDRY in the main data file. Stop.'
        STOP
      END IF
C
      NCRL=NCOL*NROW*NLAY
      NRNC=NROW*NCOL
 
      IF(NROW.GE.NCOL) THEN
        NXDIM=NROW
      ELSE
        NXDIM=NCOL
      END IF
 
      MAXPTS= NXDIM+2
      NPARY= 8*MAXPTS + 2
 
      NIGZ=NXDIM*NLAY
      IF(NRNC.GT.NIGZ) NIGZ=NRNC
 
      IF(IGRID.EQ.1) THEN
      NZDIM=NLAY
      ELSE
      NZDIM=NCRL
      END IF
C
      LCIBOU=ISUM
      ISUM=ISUM+NCRL
      LCIBPZ=ISUM
      ISUM=ISUM+NCRL
      LCXMX=ISUM
      ISUM=ISUM+NCOL
      LCXMN=ISUM
      ISUM=ISUM+NCOL
      LCDX=ISUM
      ISUM=ISUM+NCOL
      LCXLOC=ISUM
      ISUM=ISUM+NCOL
      LCYMX=ISUM
      ISUM=ISUM+NROW
      LCYMN=ISUM
      ISUM=ISUM+NROW
      LCYLOC=ISUM
      ISUM=ISUM+NROW
      LCDY=ISUM
      ISUM=ISUM+NROW
      LCZBOT=ISUM
      ISUM=ISUM+NZDIM
      LCZTOP=ISUM
      ISUM=ISUM+NZDIM
      LCDZ=ISUM
      ISUM=ISUM+NLAY
      LCZMX=ISUM
      ISUM=ISUM+NLAY
      LCZMN=ISUM
      ISUM=ISUM+NLAY
      LCHEAD=ISUM
      ISUM=ISUM+NCRL
      LCHPRV=ISUM
      ISUM=ISUM + NCRL
      LCBUFF=ISUM
      ISUM=ISUM + NCRL
      LCLAYC=ISUM
      ISUM=ISUM+NLAY
      LCNCON=ISUM
      ISUM=ISUM+NLAY
      LCDZCB=ISUM
      ISUM=ISUM+NLAY
      LCIBUF=ISUM
      ISUM=ISUM + NCRL
      LCIGZ=ISUM
      ISUM=ISUM + NIGZ
      LCIGZB=ISUM
      ISUM=ISUM + NIGZ
      LCIBX=ISUM
      ISUM=ISUM + NXDIM*NLAY
      LCCLEV=ISUM
      ISUM=ISUM + NLVMAX
      LCICB=ISUM
      ISUM=ISUM + NXDIM
      LCPAR=ISUM
      ISUM=ISUM + NPARY
      LCZXB=ISUM
      ISUM=ISUM + NIGZ
      LCZXT=ISUM
      ISUM=ISUM + NIGZ
      LCPERL=ISUM
      ISUM=ISUM + NPER
      LCTIMX=ISUM
      ISUM=ISUM + NPER
      LCNTS=ISUM
      ISUM=ISUM + NPER
      LCISSFLG=ISUM
      ISUM=ISUM + NPER
      LCCDAT=ISUM
      ISUM=ISUM + NRNC
      LCIBRM=ISUM
      ISUM=ISUM + NRNC
      ISM1=ISUM-1
      WRITE (IUSUM,5015) ISM1,LENA
5015  FORMAT(1X,I8,' ELEMENTS OUT OF ',I8,' USED IN MASTER ARRAY.')
      IF(ISM1.GT.LENA) THEN
      WRITE (IUSUM,*)
     1'THE SIZE OF THE MASTER ARRAY IS NOT LARGE ENOUGH.'
      WRITE (IUSUM,*) 'DIMENSION THE MASTER ARRAY:   A(LENA)'
      WRITE (IUSUM,5010) ISM1
5010  FORMAT (' WITH   LENA >=',I8)
      STOP
      END IF
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE FILES (IUMAIN,IBATCH,IUNIT,CUNIT,NUNIT,IUNAR,NIUNAR,
     1                  VER)
      DIMENSION IUNIT(NUNIT),IUNAR(NIUNAR)
      CHARACTER*80 FNAME,LINE,FNAMS
      CHARACTER*25 CUNIT(NUNIT),STRING
      CHARACTER*1 INLINE
      CHARACTER*(*) VER
      COMMON /DFNAMS/ FNAMS(6)
C
      INLINE= '@'
      I0=IUNAR(1)
      IUSUM=IUNAR(5)
      OPEN(IUSUM,STATUS='SCRATCH')
C
C
C  OPEN FILE CONTAINING FILE NAMES AND FORTRAN UNITS
C
      CALL MPRMPT
     1('ENTER THE NAME FILE:')
      CALL GETSTR(FNAME,-1,'5.2.1')
      CALL OPNFIL (I0,FNAME,1,IUSUM,IBATCH,1)
      CALL PUTSTR(FNAME)
C
 
9     READ (I0,'(A80)',END=20 ) LINE
      IF(LINE(1:1).EQ.INLINE .OR. LINE.EQ.' ') GO TO 9
      ICOL=1
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,1,NDUMMY,RDUMMY,IUSUM,I0)
      STRING= LINE(IWSTRT:IWLAST)
      IF(STRING.EQ.'LIST') THEN
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,2,IU,RDUMMY,IUSUM,I0)
      IF(IU.LT.0) IU= -IU
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,0,NDUMMY,RDUMMY,IUSUM,I0)
      FNAME= LINE(IWSTRT:IWLAST)
      CLOSE(IUSUM)
      IUNAR(5)=IU
      IUSUM=IUNAR(5)
      ELSE
      FNAME= 'summary.plt'
      REWIND(I0)
      CLOSE(IUSUM)
      END IF
      CALL OPNFIL (IUSUM,FNAME,4,IUSUM,IBATCH,3)
C
C  WRITE VERSION NUMBER
C
      WRITE(IUSUM,'(A/)') VER
C
10    READ (I0,'(A80)',END=20 ) LINE
      IF(LINE(1:1).EQ.INLINE .OR. LINE.EQ.' ') GO TO 10
      ICOL=1
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,1,NDUMMY,RDUMMY,IUSUM,I0)
      STRING= LINE(IWSTRT:IWLAST)
      NVALID=1
      DO 11 N=1,NUNIT
      IF(STRING.EQ.CUNIT(N)) NVALID=0
      IF(STRING.EQ.'DATA') NVALID=0
11    CONTINUE
      IF(NVALID.EQ.1) THEN
      CALL CHOP(STRING,L)
      WRITE(IUSUM,5100) STRING(1:L)
5100  FORMAT(' SKIPPING UNRECOGNIZED FILE TYPE: ',A)
      GO TO 10
      END IF
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,2,IU,RDUMMY,IUSUM,I0)
      IF(IU.LT.0) IU= -IU
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,0,NDUMMY,RDUMMY,IUSUM,I0)
      FNAME= LINE(IWSTRT:IWLAST)
 
C... CHECK FOR RESERVED UNIT NUMBERS
      IUTMP=IU
      IF(IUTMP.LT.0) IUTMP= -IUTMP
      DO 5 N=1,NIUNAR
      IF(IUTMP.EQ.IUNAR(N)) THEN
      WRITE(IUSUM,*) 'ERROR IN NAME & UNIT NUMBER FILE ON LINE:'
      WRITE(IUSUM,'(1X,A)') LINE
      WRITE(IUSUM,6000) IUTMP
      WRITE(IUSUM,*)
      WRITE(IUSUM,*)'MODPATH-PLOT RESERVES THE FOLLOWING UNIT NUMBERS:'
      WRITE(IUSUM,'(20I4)') (IUNAR(K),K=1,NIUNAR)
      STOP
      END IF
6000  FORMAT(1X,'UNIT NUMBER ',I3,' IS RESERVED. PICK ANOTHER NUMBER.')
5     CONTINUE
 
      IF(STRING.EQ.'MAIN') IUMAIN=IU
      DO 1 N=1,NUNIT
      IF(STRING.EQ.CUNIT(N)) THEN
      IUNIT(N)=IU
      GO TO 2
      END IF
1     CONTINUE
2     CONTINUE
C... MAKE SURE UNIT NUMBER IS FLAGGED AS NEGATIVE FOR UNFORMATTED FILES
      IF(STRING.EQ.'HEAD(BINARY)') IU= -IU
      IF(STRING.EQ.'DRAWDOWN(BINARY)') IU= -IU
      IF(STRING.EQ.'BUDGET') IU= -IU
C
C  OPEN DATA FILES
C
      CALL CHOP(FNAME,LFNAME)
      IF(STRING.EQ.'CBF') THEN
        FNAMS(1)=FNAME
        WRITE(IUSUM,5020) IU,FNAME(1:LFNAME)
      ELSE IF(STRING.EQ.'DCF') THEN
        FNAMS(2)=FNAME
        WRITE(IUSUM,5020) IU,FNAME(1:LFNAME)
      ELSE IF(STRING.EQ.'CONTOUR-LEVEL') THEN
        FNAMS(3)=FNAME
        WRITE(IUSUM,5020) IU,FNAME(1:LFNAME)
      ELSE IF(STRING.EQ.'ENDPOINT') THEN
        FNAMS(4)=FNAME
        WRITE(IUSUM,5020) IU,FNAME(1:LFNAME)
      ELSE IF(STRING.EQ.'PATHLINE') THEN
        FNAMS(5)=FNAME
        WRITE(IUSUM,5020) IU,FNAME(1:LFNAME)
      ELSE IF(STRING.EQ.'TIME-SERIES') THEN
        FNAMS(6)=FNAME
        WRITE(IUSUM,5020) IU,FNAME(1:LFNAME)
      ELSE
        CALL OPNFIL (IU,FNAME,1,IUSUM,IBATCH,1)
        WRITE(IUSUM,5010) IU,FNAME(1:LFNAME)
      END IF
C
5010  FORMAT(1X,'FILE UNIT NUMBER ',I3,' HAS BEEN CONNECTED TO <',A,'>')
5020  FORMAT(1X,'FILE UNIT NUMBER ',I3,' WILL BE CONNECTED TO <',A,'>')
      GO TO 10
20    CONTINUE
      WRITE(IUSUM,*)
      CLOSE(I0)
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE DEVICE (MODEL,KND,NWAIT,IWAIT,SFILE1,IU,I7,
     1                   IBATCH)
      DIMENSION IDEV(20),ITP(20),ISEP(20)
      CHARACTER*(*) SFILE1
      CHARACTER*132 FNAME,PNAME,FILDIR,CDF(20)
      CHARACTER*79 STRING,SEP
      CHARACTER*133 LINE,ULINE
      CHARACTER*60 LABEL(20)
      COMMON /FILDIR/ FILDIR
 
      MAXDEV=20
      SEP= '         ------------------------------------'
      DO 10 N=1,MAXDEV
10    ISEP(N)=0
 
C  OPEN GRAPHICS DEVICE DATA FILE
      FNAME= 'device.dat'
      CALL LOFILE(1,FNAME,PNAME,FILDIR,1,IEXIST)
      IF(IEXIST.EQ.1) THEN
      CALL OPNFIL (IU,PNAME,1,I7,IBATCH,3)
      ELSE
      WRITE(*,*) 'UNABLE TO LOCATE AND OPEN FILE <device.dat>. STOP.'
      STOP
      END IF
C
25    READ(IU,'(A)',END=20) LINE
      IF(LINE.EQ.' ' .OR. LINE(1:1).EQ.'@') GO TO 25
      ULINE=LINE
      CALL UPCASE(ULINE)
      IF(ULINE.EQ.'SEPARATOR') GO TO 25
      ICOL=1
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,2,IDEV(1),RDUMMY,I7,IU)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,2,ITP(1),RDUMMY,I7,IU)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,0,NDUMMY,RDUMMY,I7,IU)
      LABEL(1)= LINE(IWSTRT:IWLAST)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,0,NDUMMY,RDUMMY,I7,IU)
      CDF(1)= LINE(IWSTRT:IWLAST)
      NDEV=1
 
      N=1
30    CONTINUE
      READ(IU,'(A)',END=40) LINE
      IF(LINE.EQ.' ' .OR. LINE(1:1).EQ.'@') GO TO 30
      ULINE=LINE
      CALL UPCASE(ULINE)
      IF(ULINE.EQ.'SEPARATOR') THEN
        ISEP(N)=1
        GO TO 30
      END IF
      N=N+1
      ICOL=1
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,2,IDEV(N),RDUMMY,I7,IU)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,2,ITP(N),RDUMMY,I7,IU)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,0,NDUMMY,RDUMMY,I7,IU)
      LABEL(N)= LINE(IWSTRT:IWLAST)
      CALL URWORD(LINE,ICOL,IWSTRT,IWLAST,0,NDUMMY,RDUMMY,I7,IU)
      CDF(N)= LINE(IWSTRT:IWLAST)
      NDEV=N
      IF(N.LT.MAXDEV) GO TO 30
40    CONTINUE
 
      CALL MPRMPT('ENTER THE TYPE OF GRAPHICS OUTPUT DEVICE:')
      DO 45 N=1,NDEV
      WRITE(STRING,5000) N,LABEL(N)
      CALL MPRMPT(STRING)
      IF(ISEP(N).EQ.1) CALL MPRMPT(SEP)
45    CONTINUE
      CALL GETI(1,IM,3,1,NDEV,'4.20.1')
      MODEL = IDEV(IM)
      SFILE1= CDF(IM)
      IWAIT=0
      IF (ITP(IM).LE.0) IWAIT=NWAIT
      KND= ITP(IM)
      CLOSE(IU)
C
      RETURN
20    CALL MPRMPT('THE FILE DEVICE.DAT IS EMPTY OR HAS BAD DATA')
      STOP
5000  FORMAT(1X,I5,' = ',A60)
      END
 
C***** SUBROUTINE *****
      SUBROUTINE SFILE
      CHARACTER*132 SFILE1,SFILE2
      COMMON /SETFIL/ SFILE1,SFILE2
C
      CALL MPRMPT
     1('TO REDEFINE SETTINGS, ENTER NAME OF FILE WITH SETTINGS DATA:')
      CALL MPRMPT('( <CR> = USE DEFAULT SETTINGS FOR DEVICE)')
      CALL GETSTR(SFILE2,0,'4.22.1')
C
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE LOFILE(NDIM,FNAME,PNAME,FILDIR,ISCDIR,IEXIST)
      LOGICAL*4 EX
      CHARACTER*(*) FNAME
      CHARACTER*(*) FILDIR(NDIM)
      CHARACTER*(*) PNAME
C
      IEXIST=0
C
C--- IF ISCDIR=1, SEARCH CURRENT DIRECTORY FIRST.
      IF(ISCDIR.EQ.1) THEN
      INQUIRE(FILE=FNAME,EXIST=EX,ERR=5)
      IF(EX) THEN
      IEXIST=1
      PNAME=FNAME
      RETURN
      END IF
      END IF
5     CONTINUE
 
C--- FIND THE LENGTH OF FILE NAME
      CALL CHOP(FNAME,LFNAME)
 
C--- GO THROUGH PATH NAMES UNTIL ONE IS FOUND.
      DO 10 K=1,NDIM
      IF(FILDIR(K).NE.' ') THEN
      CALL CHOP(FILDIR(K),LDIR)
      PNAME= FILDIR(K)(1:LDIR)//FNAME(1:LFNAME)
      INQUIRE(FILE=PNAME,EXIST=EX,ERR=10)
C--- FILE WAS FOUND AND OPENED. SET FLAG & RETURN.
      IF(EX) THEN
      IEXIST=1
      RETURN
      END IF
      END IF
C
10    CONTINUE
      PNAME= ' '
      RETURN
      END
 
C***** SUBROUTINE *****
      SUBROUTINE SETNGS(IU,I7,SFILE1,SFILE2)
      CHARACTER*(*) SFILE1,SFILE2
      CHARACTER*132 FNAME,PNAME,FILDIR
      COMMON /FILDIR/ FILDIR
C
      DO 1 K=1,2
      IF(K.EQ.1) FNAME=SFILE1
      IF(K.EQ.2) FNAME=SFILE2
      IF(FNAME.NE.' ') THEN
      CALL LOFILE(1,FNAME,PNAME,FILDIR,1,IEXIST)
C
      IF(IEXIST.EQ.1) THEN
      CALL OPNFIL(IU,PNAME,1,I7,IBATCH,3)
      CALL GETSET(IU,I7)
      CLOSE(IU)
      ELSE IF(IEXIST.EQ.0) THEN
C
      IF(K.EQ.1) THEN
      WRITE(*,*)
     1'CANNOT FIND THE SETTINGS FILE SPECIFIED IN <device.dat>. STOP.'
      STOP
      ELSE
      WRITE(*,*)
     1'CANNOT FIND THE SETTINGS FILE SPECIFIED AT RUNTIME. STOP.'
      STOP
      END IF
C
      END IF
C
      END IF
1     CONTINUE
      RETURN
      END
